/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.BootCamp38.rest.contract;

import com.BootCamp38.model.Client;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.server.ServerWebExchange;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;
import org.springframework.http.codec.multipart.Part;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-12-05T16:37:41.514380-05:00[America/Lima]")
@Validated
@Tag(name = "client", description = "the client API")
public interface ClientApi {

    /**
     * POST /client : add a new Client
     * add a new Client
     *
     * @param client creat a new Client (required)
     * @return Succesful Operation (status code 200)
     */
    @Operation(
        operationId = "addClient",
        summary = "add a new Client",
        description = "add a new Client",
        tags = { "client" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Succesful Operation", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Client.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/client",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default Mono<ResponseEntity<Client>> _addClient(
        @Parameter(name = "Client", description = "creat a new Client", required = true) @Valid @RequestBody Mono<Client> client,
        @Parameter(hidden = true) final ServerWebExchange exchange
    ) {
        return addClient(client, exchange);
    }

    // Override this method
    default  Mono<ResponseEntity<Client>> addClient(Mono<Client> client,  final ServerWebExchange exchange) {
        Mono<Void> result = Mono.empty();
        exchange.getResponse().setStatusCode(HttpStatus.NOT_IMPLEMENTED);
        for (MediaType mediaType : exchange.getRequest().getHeaders().getAccept()) {
            if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                String exampleString = "{ \"clientId\" : \"clientId\", \"clientType\" : \"naturalPerson\", \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"clientProduct\" : [ { \"typeProduct\" : \"savings\", \"clientProductId\" : \"clientProductId\", \"accountHolders\" : [ { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" }, { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" } ], \"accountNumber\" : \"accountNumber\", \"accountBalance\" : 0.8008281904610115, \"authorizedSignatories\" : [ { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" }, { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" } ] }, { \"typeProduct\" : \"savings\", \"clientProductId\" : \"clientProductId\", \"accountHolders\" : [ { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" }, { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" } ], \"accountNumber\" : \"accountNumber\", \"accountBalance\" : 0.8008281904610115, \"authorizedSignatories\" : [ { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" }, { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" } ] } ] }";
                result = ApiUtil.getExampleResponse(exchange, mediaType, exampleString);
                break;
            }
        }
        return result.then(client).then(Mono.empty());

    }


    /**
     * DELETE /client/{documentNumber} : delete a client
     * deleta a client by documentNumber
     *
     * @param documentNumber documentNumber of client to delete (required)
     * @return no content (status code 204)
     */
    @Operation(
        operationId = "deleteClientByDocumentNumber",
        summary = "delete a client",
        description = "deleta a client by documentNumber",
        tags = { "client" },
        responses = {
            @ApiResponse(responseCode = "204", description = "no content")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/client/{documentNumber}"
    )
    default Mono<ResponseEntity<Void>> _deleteClientByDocumentNumber(
        @Parameter(name = "documentNumber", description = "documentNumber of client to delete", required = true, in = ParameterIn.PATH) @PathVariable("documentNumber") String documentNumber,
        @Parameter(hidden = true) final ServerWebExchange exchange
    ) {
        return deleteClientByDocumentNumber(documentNumber, exchange);
    }

    // Override this method
    default  Mono<ResponseEntity<Void>> deleteClientByDocumentNumber(String documentNumber,  final ServerWebExchange exchange) {
        Mono<Void> result = Mono.empty();
        exchange.getResponse().setStatusCode(HttpStatus.NOT_IMPLEMENTED);
        return result.then(Mono.empty());

    }


    /**
     * GET /client/{documentNumber} : Find client by documentNumber
     * Returns a single client
     *
     * @param documentNumber documentNumber of client to return (required)
     * @return successful operation (status code 200)
     */
    @Operation(
        operationId = "getClientByDocumentNumber",
        summary = "Find client by documentNumber",
        description = "Returns a single client",
        tags = { "client" },
        responses = {
            @ApiResponse(responseCode = "200", description = "successful operation", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Client.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/client/{documentNumber}",
        produces = { "application/json" }
    )
    default Mono<ResponseEntity<Client>> _getClientByDocumentNumber(
        @Parameter(name = "documentNumber", description = "documentNumber of client to return", required = true, in = ParameterIn.PATH) @PathVariable("documentNumber") String documentNumber,
        @Parameter(hidden = true) final ServerWebExchange exchange
    ) {
        return getClientByDocumentNumber(documentNumber, exchange);
    }

    // Override this method
    default  Mono<ResponseEntity<Client>> getClientByDocumentNumber(String documentNumber,  final ServerWebExchange exchange) {
        Mono<Void> result = Mono.empty();
        exchange.getResponse().setStatusCode(HttpStatus.NOT_IMPLEMENTED);
        for (MediaType mediaType : exchange.getRequest().getHeaders().getAccept()) {
            if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                String exampleString = "{ \"clientId\" : \"clientId\", \"clientType\" : \"naturalPerson\", \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"clientProduct\" : [ { \"typeProduct\" : \"savings\", \"clientProductId\" : \"clientProductId\", \"accountHolders\" : [ { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" }, { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" } ], \"accountNumber\" : \"accountNumber\", \"accountBalance\" : 0.8008281904610115, \"authorizedSignatories\" : [ { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" }, { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" } ] }, { \"typeProduct\" : \"savings\", \"clientProductId\" : \"clientProductId\", \"accountHolders\" : [ { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" }, { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" } ], \"accountNumber\" : \"accountNumber\", \"accountBalance\" : 0.8008281904610115, \"authorizedSignatories\" : [ { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" }, { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" } ] } ] }";
                result = ApiUtil.getExampleResponse(exchange, mediaType, exampleString);
                break;
            }
        }
        return result.then(Mono.empty());

    }


    /**
     * GET /client : get all Clients
     * get all Clients
     *
     * @return succesful operation (status code 200)
     */
    @Operation(
        operationId = "getClients",
        summary = "get all Clients",
        description = "get all Clients",
        tags = { "client" },
        responses = {
            @ApiResponse(responseCode = "200", description = "succesful operation", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Client.class)))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/client",
        produces = { "application/json" }
    )
    default Mono<ResponseEntity<Flux<Client>>> _getClients(
        @Parameter(hidden = true) final ServerWebExchange exchange
    ) {
        return getClients(exchange);
    }

    // Override this method
    default  Mono<ResponseEntity<Flux<Client>>> getClients( final ServerWebExchange exchange) {
        Mono<Void> result = Mono.empty();
        exchange.getResponse().setStatusCode(HttpStatus.NOT_IMPLEMENTED);
        for (MediaType mediaType : exchange.getRequest().getHeaders().getAccept()) {
            if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                String exampleString = "[ { \"clientId\" : \"clientId\", \"clientType\" : \"naturalPerson\", \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"clientProduct\" : [ { \"typeProduct\" : \"savings\", \"clientProductId\" : \"clientProductId\", \"accountHolders\" : [ { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" }, { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" } ], \"accountNumber\" : \"accountNumber\", \"accountBalance\" : 0.8008281904610115, \"authorizedSignatories\" : [ { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" }, { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" } ] }, { \"typeProduct\" : \"savings\", \"clientProductId\" : \"clientProductId\", \"accountHolders\" : [ { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" }, { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" } ], \"accountNumber\" : \"accountNumber\", \"accountBalance\" : 0.8008281904610115, \"authorizedSignatories\" : [ { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" }, { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" } ] } ] }, { \"clientId\" : \"clientId\", \"clientType\" : \"naturalPerson\", \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"clientProduct\" : [ { \"typeProduct\" : \"savings\", \"clientProductId\" : \"clientProductId\", \"accountHolders\" : [ { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" }, { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" } ], \"accountNumber\" : \"accountNumber\", \"accountBalance\" : 0.8008281904610115, \"authorizedSignatories\" : [ { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" }, { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" } ] }, { \"typeProduct\" : \"savings\", \"clientProductId\" : \"clientProductId\", \"accountHolders\" : [ { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" }, { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" } ], \"accountNumber\" : \"accountNumber\", \"accountBalance\" : 0.8008281904610115, \"authorizedSignatories\" : [ { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" }, { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" } ] } ] } ]";
                result = ApiUtil.getExampleResponse(exchange, mediaType, exampleString);
                break;
            }
        }
        return result.then(Mono.empty());

    }


    /**
     * PUT /client : update an existing client
     * update an existing client
     *
     * @param client update an existing client (optional)
     * @return succesful operation (status code 200)
     */
    @Operation(
        operationId = "updateClient",
        summary = "update an existing client",
        description = "update an existing client",
        tags = { "client" },
        responses = {
            @ApiResponse(responseCode = "200", description = "succesful operation", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Client.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/client",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default Mono<ResponseEntity<Client>> _updateClient(
        @Parameter(name = "Client", description = "update an existing client") @Valid @RequestBody(required = false) Mono<Client> client,
        @Parameter(hidden = true) final ServerWebExchange exchange
    ) {
        return updateClient(client, exchange);
    }

    // Override this method
    default  Mono<ResponseEntity<Client>> updateClient(Mono<Client> client,  final ServerWebExchange exchange) {
        Mono<Void> result = Mono.empty();
        exchange.getResponse().setStatusCode(HttpStatus.NOT_IMPLEMENTED);
        for (MediaType mediaType : exchange.getRequest().getHeaders().getAccept()) {
            if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                String exampleString = "{ \"clientId\" : \"clientId\", \"clientType\" : \"naturalPerson\", \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"clientProduct\" : [ { \"typeProduct\" : \"savings\", \"clientProductId\" : \"clientProductId\", \"accountHolders\" : [ { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" }, { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" } ], \"accountNumber\" : \"accountNumber\", \"accountBalance\" : 0.8008281904610115, \"authorizedSignatories\" : [ { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" }, { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" } ] }, { \"typeProduct\" : \"savings\", \"clientProductId\" : \"clientProductId\", \"accountHolders\" : [ { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" }, { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" } ], \"accountNumber\" : \"accountNumber\", \"accountBalance\" : 0.8008281904610115, \"authorizedSignatories\" : [ { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" }, { \"documentNumber\" : \"documentNumber\", \"name\" : \"name\", \"holderAndSignerId\" : \"holderAndSignerId\" } ] } ] }";
                result = ApiUtil.getExampleResponse(exchange, mediaType, exampleString);
                break;
            }
        }
        return result.then(client).then(Mono.empty());

    }

}
